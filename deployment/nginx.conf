server {
    listen 80;
    listen [::]:80;
    server_name patincarrera.net www.patincarrera.net;

    # Serve the Vite build generated with `npm run build`
    root /var/www/patincarrera/frontend/dist;
    index index.html;

    # Allow large JSON bodies and uploads that the API already expects.
    client_max_body_size 100M;

    # Optional: redirect all HTTP traffic to HTTPS once certificates are installed.
    # return 301 https://$host$request_uri;

    access_log /var/log/nginx/patincarrera.access.log;
    error_log /var/log/nginx/patincarrera.error.log;

    location /api/ {
        proxy_pass http://127.0.0.1:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    # Serve uploaded assets directly from disk. Files that do not exist on the
    # filesystem fall back to Express so older uploads stored outside of the
    # main directory can still be resolved.
    location /uploads/ {
        alias /var/www/patincarrera/backend/uploads/;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri $uri/ @uploads_api_fallback;
    }

    location @uploads_api_fallback {
        internal;
        proxy_pass http://127.0.0.1:5000/api$request_uri;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backwards compatibility: redirect legacy `/api/uploads/*` URLs to the new
    # public path handled above so bookmarks keep working.
    location /api/uploads/ {
        rewrite ^/api/uploads/(.*)$ /uploads/$1 permanent;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
}
